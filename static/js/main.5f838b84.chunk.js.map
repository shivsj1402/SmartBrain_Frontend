{"version":3,"sources":["Components/Navigation/NavBar.js","Components/Navigation/Logo.js","Components/ImageForm/ImageForm.js","Components/Rank/Rank.js","Components/FaceRecognisation/FaceRecog.js","Components/SignIn/Signin.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js","Components/Navigation/brainLogo.jpg"],"names":["NavBar","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","ImageForm","onInputChange","onSubmit","type","onChange","Rank","name","entries","FaceRecog","imgUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInpassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","this","Component","Register","regEmail","regPassword","onNameChange","regName","onSubmitReg","particalParms","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","e","console","log","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.5f838b84.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction NavBar({ onRouteChange , isSignedIn }) {\r\n    if(isSignedIn){\r\n      return (\r\n        <nav style={{display:'flex' , justifyContent:'flex-end'}}>\r\n          <p onClick={() =>onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n      );\r\n    }else{\r\n      return(\r\n        <nav style={{display:'flex' , justifyContent:'flex-end'}}>\r\n          <p onClick={() =>onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\r\n          <p onClick={() =>onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain  from './brainLogo.jpg'\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className='ma4 mt0'>\r\n        <Tilt className=\"Tilt br4 shadow-2\" options={{ max : 25 }} style={{ height: 140, width: 150 }} >\r\n        <div className=\"Tilt-inner\">\r\n        <img  className ='br4' src={brain} alt='brain-logo' />\r\n             </div>\r\n        </Tilt>         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './imageForm.css';\r\n\r\nfunction ImageForm({ onInputChange, onSubmit }) {\r\n  return (\r\n    <div>\r\n        <p className ='f3'>\r\n            {'This SmartBrain will detect Faces. Give it a try!'}\r\n        </p>\r\n        <div className='center'>\r\n            <div className='pa4 br3 shadow-5 form center'>\r\n                <input className ='f4 pa2 w-70' type='tex' onChange={onInputChange}></input>\r\n                <button className ='f4 pa2 w-30 link pointer ph3 pv2 dib grow bg-light-purple' onClick={onSubmit}>Detect!</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageForm;","import React from 'react';\r\n\r\nfunction Rank({name, entries}) {\r\n  return (\r\n    <div>\r\n        <div className='f3 white'>\r\n            {`${name} your current Rank is`}\r\n        </div>\r\n        <div className='f1 white'>\r\n            {entries}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecog.css';\r\n\r\nfunction FaceRecog({ imgUrl, box }) {\r\n  return (\r\n    <div className='center na'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' src={imgUrl} alt='' width='500px' height='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecog;","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            signInEmail:'',\r\n            signInpassword:''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event)=>{\r\n        this.setState({\r\n            signInEmail: event.target.value\r\n        })\r\n    }\r\n\r\n    onPasswordChange = (event)=>{\r\n        this.setState({\r\n            signInpassword: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitSignIn =() =>{\r\n        fetch('https://obscure-ocean-70775.herokuapp.com/signin', {\r\n            method:'post',\r\n            headers:{\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInpassword\r\n            })\r\n        }).then(response => response.json())\r\n        .then(user =>{\r\n            if(user.id){\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                        </div>\r\n                        </fieldset>\r\n                    <div className=\"\">\r\n                    <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" onClick ={this.onSubmitSignIn}  type=\"submit\" value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    <p onClick={()=>this.props.onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n            );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass Register extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            regEmail:'',\r\n            regPassword:'',\r\n            regName:''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event)=>{\r\n        this.setState({\r\n            regEmail: event.target.value\r\n        })\r\n    }\r\n\r\n    onPasswordChange = (event)=>{\r\n        this.setState({\r\n            regPassword: event.target.value\r\n        })\r\n    }\r\n\r\n    onNameChange = (event)=>{\r\n        this.setState({\r\n            regName: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitReg =() =>{\r\n        fetch('https://obscure-ocean-70775.herokuapp.com/register', {\r\n            method:'post',\r\n            headers:{\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.regEmail,\r\n                password: this.state.regPassword,\r\n                name:this.state.regName \r\n            })\r\n        }).then(response => response.json())\r\n        .then(user =>{\r\n            if(user.id){\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                            <input onChange={this.onNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input  onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                            <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                        </div>\r\n                        </fieldset>\r\n                    <div className=\"\">\r\n                    <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" onClick ={this.onSubmitReg}  type=\"submit\" value=\"Sign Up\" />\r\n                    </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n          );\r\n    }\r\n \r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport NavBar from './Components/Navigation/NavBar';\nimport Logo from './Components/Navigation/Logo';\nimport ImageForm from './Components/ImageForm/ImageForm';\nimport Rank from './Components/Rank/Rank';\nimport FaceRecog from './Components/FaceRecognisation/FaceRecog';\nimport 'tachyons';\nimport SignIn from './Components/SignIn/Signin';\nimport Register from './Components/Register/Register';\n\n\nconst particalParms = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input:'',\n  imgUrl:'',\n  box: {},\n  route:'signin',\n  isSignedIn: false,\n  user:{\n    name:'',\n    email:'',\n    entries:0,\n    id : '',\n    joined : ''\n  }\n}\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state= initialState;\n  }\n\n  loadUser = (data)=>{\n    this.setState({ user: {\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        id : data.id,\n        joined : data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox =(box)=>{\n    this.setState({box : box})\n  }\n  onInputChange = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  onSubmit= (e)=>{\n    this.setState({\n      imgUrl: this.state.input\n    })\n    fetch('https://obscure-ocean-70775.herokuapp.com/imageClarafai', {\n      method:'post',\n      headers:{\n          'Content-Type' : 'application/json'\n      },\n      body: JSON.stringify({\n          input: this.state.input\n      })\n      }).then(response => response.json())\n      .then(response=>{\n        if(response){\n          fetch('https://obscure-ocean-70775.herokuapp.com/image', {\n            method:'put',\n            headers:{\n                'Content-Type' : 'application/json'\n            },\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n        }).then(response => response.json())\n        .then(count=>{\n          this.setState(Object.assign(this.state.user,{entries:count}))\n        }).catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))})\n      .catch(err => console.log(err));    \n      \n  }\n\n  onRouteChange= (route)=>{\n    if(route ==='signout'){\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route:route});\n  }\n\n  render() {\n    const { isSignedIn , imgUrl, route ,box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' \n                params={particalParms}\n              />\n        <NavBar onRouteChange={this.onRouteChange} isSignedIn={isSignedIn}/>\n        <Logo />\n        { route ==='home'\n        ? <div>\n          <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n          <ImageForm  onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n          <FaceRecog box={box} imgUrl={imgUrl}/>\n        </div>\n        : (\n          route ==='signin'\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brainLogo.cc146e65.jpg\";"],"sourceRoot":""}